{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1","program":"C:\\Users\\Barat\\.rustup\\toolchains\\stable-x86_64-pc-windows-gnu\\bin\\rls.exe","arguments":["--crate-name","winreg","C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=b01c03be5695a02b","-C","extra-filename=-b01c03be5695a02b","--out-dir","e:\\desk\\Desktop\\simple-Ethereum-wallet\\ether_wallet\\target\\rls\\debug\\deps","-L","dependency=e:\\desk\\Desktop\\simple-Ethereum-wallet\\ether_wallet\\target\\rls\\debug\\deps","--extern","winapi=e:\\desk\\Desktop\\simple-Ethereum-wallet\\ether_wallet\\target\\rls\\debug\\deps\\libwinapi-4f116b91c49b4f46.rmeta","--cap-lints","allow","-L","native=C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-x86_64-pc-windows-gnu-0.4.0\\lib","--error-format=json","--sysroot","C:\\Users\\Barat\\.rustup/toolchains/stable-x86_64-pc-windows-gnu"],"output":"e:\\desk\\Desktop\\simple-Ethereum-wallet\\ether_wallet\\target\\rls\\debug\\deps\\libwinreg-b01c03be5695a02b.rmeta"},"prelude":{"crate_id":{"name":"winreg","disambiguator":[15265926371119098324,0]},"crate_root":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src","external_crates":[{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[9933199878862807254,0]}},{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[7484747461353352854,0]}},{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16799927046356361214,0]}},{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15711970465252999667,0]}},{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[1529599006453177946,0]}},{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[259964764378729836,0]}},{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1401592996150409924,0]}},{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14734655664086317095,0]}},{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[4074841263751738329,0]}},{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4433341090040332389,0]}},{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[11866525247851478942,0]}},{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[5523593855187046791,0]}},{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[12555581230445737962,0]}},{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","num":14,"id":{"name":"gimli","disambiguator":[10455931732283353623,0]}},{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","num":15,"id":{"name":"object","disambiguator":[4593984188917249458,0]}},{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","num":16,"id":{"name":"memchr","disambiguator":[4827989473313180090,0]}},{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[17684584555704356724,0]}},{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","num":18,"id":{"name":"winapi","disambiguator":[8092026463587222292,0]}}],"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":211,"byte_end":36009,"line_start":7,"line_end":1143,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":30702},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":4182,"byte_end":4186,"line_start":132,"line_end":132,"column_start":36,"column_end":40},"alias_span":null,"name":"HKEY","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":27571},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":36350,"byte_end":36364,"line_start":10,"line_end":10,"column_start":5,"column_end":19},"alias_span":null,"name":"KEY_ALL_ACCESS","value":"","parent":{"krate":0,"index":72}},{"kind":"Use","ref_id":{"krate":18,"index":27564},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":36366,"byte_end":36381,"line_start":10,"line_end":10,"column_start":21,"column_end":36},"alias_span":null,"name":"KEY_CREATE_LINK","value":"","parent":{"krate":0,"index":72}},{"kind":"Use","ref_id":{"krate":18,"index":27561},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":36383,"byte_end":36401,"line_start":10,"line_end":10,"column_start":38,"column_end":56},"alias_span":null,"name":"KEY_CREATE_SUB_KEY","value":"","parent":{"krate":0,"index":72}},{"kind":"Use","ref_id":{"krate":18,"index":27562},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":36403,"byte_end":36425,"line_start":10,"line_end":10,"column_start":58,"column_end":80},"alias_span":null,"name":"KEY_ENUMERATE_SUB_KEYS","value":"","parent":{"krate":0,"index":72}},{"kind":"Use","ref_id":{"krate":18,"index":27570},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":36427,"byte_end":36438,"line_start":10,"line_end":10,"column_start":82,"column_end":93},"alias_span":null,"name":"KEY_EXECUTE","value":"","parent":{"krate":0,"index":72}},{"kind":"Use","ref_id":{"krate":18,"index":27563},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":36444,"byte_end":36454,"line_start":11,"line_end":11,"column_start":5,"column_end":15},"alias_span":null,"name":"KEY_NOTIFY","value":"","parent":{"krate":0,"index":72}},{"kind":"Use","ref_id":{"krate":18,"index":27559},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":36456,"byte_end":36471,"line_start":11,"line_end":11,"column_start":17,"column_end":32},"alias_span":null,"name":"KEY_QUERY_VALUE","value":"","parent":{"krate":0,"index":72}},{"kind":"Use","ref_id":{"krate":18,"index":27568},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":36473,"byte_end":36481,"line_start":11,"line_end":11,"column_start":34,"column_end":42},"alias_span":null,"name":"KEY_READ","value":"","parent":{"krate":0,"index":72}},{"kind":"Use","ref_id":{"krate":18,"index":27560},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":36483,"byte_end":36496,"line_start":11,"line_end":11,"column_start":44,"column_end":57},"alias_span":null,"name":"KEY_SET_VALUE","value":"","parent":{"krate":0,"index":72}},{"kind":"Use","ref_id":{"krate":18,"index":27565},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":36498,"byte_end":36513,"line_start":11,"line_end":11,"column_start":59,"column_end":74},"alias_span":null,"name":"KEY_WOW64_32KEY","value":"","parent":{"krate":0,"index":72}},{"kind":"Use","ref_id":{"krate":18,"index":27566},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":36515,"byte_end":36530,"line_start":11,"line_end":11,"column_start":76,"column_end":91},"alias_span":null,"name":"KEY_WOW64_64KEY","value":"","parent":{"krate":0,"index":72}},{"kind":"Use","ref_id":{"krate":18,"index":27567},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":36536,"byte_end":36549,"line_start":12,"line_end":12,"column_start":5,"column_end":18},"alias_span":null,"name":"KEY_WOW64_RES","value":"","parent":{"krate":0,"index":72}},{"kind":"Use","ref_id":{"krate":18,"index":27569},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":36551,"byte_end":36560,"line_start":12,"line_end":12,"column_start":20,"column_end":29},"alias_span":null,"name":"KEY_WRITE","value":"","parent":{"krate":0,"index":72}},{"kind":"Use","ref_id":{"krate":18,"index":27975},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":36599,"byte_end":36616,"line_start":15,"line_end":15,"column_start":5,"column_end":22},"alias_span":null,"name":"HKEY_CLASSES_ROOT","value":"","parent":{"krate":0,"index":72}},{"kind":"Use","ref_id":{"krate":18,"index":27982},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":36618,"byte_end":36637,"line_start":15,"line_end":15,"column_start":24,"column_end":43},"alias_span":null,"name":"HKEY_CURRENT_CONFIG","value":"","parent":{"krate":0,"index":72}},{"kind":"Use","ref_id":{"krate":18,"index":27976},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":36639,"byte_end":36656,"line_start":15,"line_end":15,"column_start":45,"column_end":62},"alias_span":null,"name":"HKEY_CURRENT_USER","value":"","parent":{"krate":0,"index":72}},{"kind":"Use","ref_id":{"krate":18,"index":27984},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":36658,"byte_end":36690,"line_start":15,"line_end":15,"column_start":64,"column_end":96},"alias_span":null,"name":"HKEY_CURRENT_USER_LOCAL_SETTINGS","value":"","parent":{"krate":0,"index":72}},{"kind":"Use","ref_id":{"krate":18,"index":27983},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":36696,"byte_end":36709,"line_start":16,"line_end":16,"column_start":5,"column_end":18},"alias_span":null,"name":"HKEY_DYN_DATA","value":"","parent":{"krate":0,"index":72}},{"kind":"Use","ref_id":{"krate":18,"index":27977},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":36711,"byte_end":36729,"line_start":16,"line_end":16,"column_start":20,"column_end":38},"alias_span":null,"name":"HKEY_LOCAL_MACHINE","value":"","parent":{"krate":0,"index":72}},{"kind":"Use","ref_id":{"krate":18,"index":27979},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":36731,"byte_end":36752,"line_start":16,"line_end":16,"column_start":40,"column_end":61},"alias_span":null,"name":"HKEY_PERFORMANCE_DATA","value":"","parent":{"krate":0,"index":72}},{"kind":"Use","ref_id":{"krate":18,"index":27981},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":36754,"byte_end":36778,"line_start":16,"line_end":16,"column_start":63,"column_end":87},"alias_span":null,"name":"HKEY_PERFORMANCE_NLSTEXT","value":"","parent":{"krate":0,"index":72}},{"kind":"Use","ref_id":{"krate":18,"index":27980},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":36784,"byte_end":36805,"line_start":17,"line_end":17,"column_start":5,"column_end":26},"alias_span":null,"name":"HKEY_PERFORMANCE_TEXT","value":"","parent":{"krate":0,"index":72}},{"kind":"Use","ref_id":{"krate":18,"index":27978},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":36807,"byte_end":36817,"line_start":17,"line_end":17,"column_start":28,"column_end":38},"alias_span":null,"name":"HKEY_USERS","value":"","parent":{"krate":0,"index":72}},{"kind":"Use","ref_id":{"krate":18,"index":27973},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":36819,"byte_end":36837,"line_start":17,"line_end":17,"column_start":40,"column_end":58},"alias_span":null,"name":"REG_PROCESS_APPKEY","value":"","parent":{"krate":0,"index":72}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":37409,"byte_end":37410,"line_start":45,"line_end":45,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"REG_EXPAND_SZ, REG_DWORD, REG_SZ, REG_MULTI_SZ, REG_QWORD","parent":{"krate":0,"index":72}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":37571,"byte_end":37572,"line_start":51,"line_end":51,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":72}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":211,"byte_end":36009,"line_start":7,"line_end":1143,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":153},{"krate":0,"index":361},{"krate":0,"index":369},{"krate":0,"index":371},{"krate":0,"index":209},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":266},{"krate":0,"index":271},{"krate":0,"index":275},{"krate":0,"index":280},{"krate":0,"index":282}],"decl_id":null,"docs":" Crate for accessing MS Windows registry","sig":null,"attributes":[{"value":"/ Crate for accessing MS Windows registry","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":211,"byte_end":254,"line_start":7,"line_end":7,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":255,"byte_end":258,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/## Usage","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":259,"byte_end":270,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":271,"byte_end":274,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/### Basic usage","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":275,"byte_end":293,"line_start":11,"line_end":11,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":294,"byte_end":297,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/```toml,ignore","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":298,"byte_end":315,"line_start":13,"line_end":13,"column_start":1,"column_end":18}},{"value":"/# Cargo.toml","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":316,"byte_end":331,"line_start":14,"line_end":14,"column_start":1,"column_end":16}},{"value":"/[dependencies]","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":332,"byte_end":349,"line_start":15,"line_end":15,"column_start":1,"column_end":18}},{"value":"/winreg = \"0.10\"","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":350,"byte_end":368,"line_start":16,"line_end":16,"column_start":1,"column_end":19}},{"value":"/```","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":369,"byte_end":375,"line_start":17,"line_end":17,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":376,"byte_end":379,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/```no_run","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":380,"byte_end":392,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/extern crate winreg;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":393,"byte_end":416,"line_start":20,"line_end":20,"column_start":1,"column_end":24}},{"value":"/use std::io;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":417,"byte_end":432,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/use std::path::Path;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":433,"byte_end":456,"line_start":22,"line_end":22,"column_start":1,"column_end":24}},{"value":"/use winreg::enums::*;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":457,"byte_end":481,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/use winreg::RegKey;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":482,"byte_end":504,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":505,"byte_end":508,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":509,"byte_end":541,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/    println!(\"Reading some system info...\");","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":542,"byte_end":589,"line_start":27,"line_end":27,"column_start":1,"column_end":48}},{"value":"/    let hklm = RegKey::predef(HKEY_LOCAL_MACHINE);","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":590,"byte_end":643,"line_start":28,"line_end":28,"column_start":1,"column_end":54}},{"value":"/    let cur_ver = hklm.open_subkey(\"SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\")?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":644,"byte_end":731,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/    let pf: String = cur_ver.get_value(\"ProgramFilesDir\")?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":732,"byte_end":794,"line_start":30,"line_end":30,"column_start":1,"column_end":63}},{"value":"/    let dp: String = cur_ver.get_value(\"DevicePath\")?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":795,"byte_end":852,"line_start":31,"line_end":31,"column_start":1,"column_end":58}},{"value":"/    println!(\"ProgramFiles = {}\\nDevicePath = {}\", pf, dp);","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":853,"byte_end":915,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/    let info = cur_ver.query_info()?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":916,"byte_end":956,"line_start":33,"line_end":33,"column_start":1,"column_end":41}},{"value":"/    println!(\"info = {:?}\", info);","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":957,"byte_end":994,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/    let mt = info.get_last_write_time_system();","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":995,"byte_end":1045,"line_start":35,"line_end":35,"column_start":1,"column_end":51}},{"value":"/    println!(","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":1046,"byte_end":1062,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/        \"last_write_time as winapi::um::minwinbase::SYSTEMTIME = {}-{:02}-{:02} {:02}:{:02}:{:02}\",","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":1063,"byte_end":1165,"line_start":37,"line_end":37,"column_start":1,"column_end":103}},{"value":"/        mt.wYear, mt.wMonth, mt.wDay, mt.wHour, mt.wMinute, mt.wSecond","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":1166,"byte_end":1239,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/    );","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":1240,"byte_end":1249,"line_start":39,"line_end":39,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":1250,"byte_end":1253,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/    // enable `chrono` feature on `winreg` to make this work","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":1254,"byte_end":1317,"line_start":41,"line_end":41,"column_start":1,"column_end":64}},{"value":"/    // println!(","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":1318,"byte_end":1337,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/    //     \"last_write_time as chrono::NaiveDateTime = {}\",","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":1338,"byte_end":1400,"line_start":43,"line_end":43,"column_start":1,"column_end":63}},{"value":"/    //     info.get_last_write_time_chrono()","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":1401,"byte_end":1448,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/    // );","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":1449,"byte_end":1461,"line_start":45,"line_end":45,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":1462,"byte_end":1465,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/    println!(\"And now lets write something...\");","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":1466,"byte_end":1517,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/    let hkcu = RegKey::predef(HKEY_CURRENT_USER);","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":1518,"byte_end":1570,"line_start":48,"line_end":48,"column_start":1,"column_end":53}},{"value":"/    let path = Path::new(\"Software\").join(\"WinregRsExample1\");","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":1571,"byte_end":1636,"line_start":49,"line_end":49,"column_start":1,"column_end":66}},{"value":"/    let (key, disp) = hkcu.create_subkey(&path)?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":1637,"byte_end":1689,"line_start":50,"line_end":50,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":1690,"byte_end":1693,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/    match disp {","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":1694,"byte_end":1713,"line_start":52,"line_end":52,"column_start":1,"column_end":20}},{"value":"/        REG_CREATED_NEW_KEY => println!(\"A new key has been created\"),","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":1714,"byte_end":1787,"line_start":53,"line_end":53,"column_start":1,"column_end":74}},{"value":"/        REG_OPENED_EXISTING_KEY => println!(\"An existing key has been opened\"),","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":1788,"byte_end":1870,"line_start":54,"line_end":54,"column_start":1,"column_end":83}},{"value":"/    }","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":1871,"byte_end":1879,"line_start":55,"line_end":55,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":1880,"byte_end":1883,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/    key.set_value(\"TestSZ\", &\"written by Rust\")?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":1884,"byte_end":1936,"line_start":57,"line_end":57,"column_start":1,"column_end":53}},{"value":"/    let sz_val: String = key.get_value(\"TestSZ\")?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":1937,"byte_end":1990,"line_start":58,"line_end":58,"column_start":1,"column_end":54}},{"value":"/    key.delete_value(\"TestSZ\")?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":1991,"byte_end":2026,"line_start":59,"line_end":59,"column_start":1,"column_end":36}},{"value":"/    println!(\"TestSZ = {}\", sz_val);","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":2027,"byte_end":2066,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":2067,"byte_end":2070,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/    key.set_value(\"TestMultiSZ\", &vec![\"written\", \"by\", \"Rust\"])?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":2071,"byte_end":2140,"line_start":62,"line_end":62,"column_start":1,"column_end":70}},{"value":"/    let multi_sz_val: Vec<String> = key.get_value(\"TestMultiSZ\")?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":2141,"byte_end":2210,"line_start":63,"line_end":63,"column_start":1,"column_end":70}},{"value":"/    key.delete_value(\"TestMultiSZ\")?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":2211,"byte_end":2251,"line_start":64,"line_end":64,"column_start":1,"column_end":41}},{"value":"/    println!(\"TestMultiSZ = {:?}\", multi_sz_val);","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":2252,"byte_end":2304,"line_start":65,"line_end":65,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":2305,"byte_end":2308,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/    key.set_value(\"TestDWORD\", &1234567890u32)?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":2309,"byte_end":2360,"line_start":67,"line_end":67,"column_start":1,"column_end":52}},{"value":"/    let dword_val: u32 = key.get_value(\"TestDWORD\")?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":2361,"byte_end":2417,"line_start":68,"line_end":68,"column_start":1,"column_end":57}},{"value":"/    println!(\"TestDWORD = {}\", dword_val);","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":2418,"byte_end":2463,"line_start":69,"line_end":69,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":2464,"byte_end":2467,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/    key.set_value(\"TestQWORD\", &1234567891011121314u64)?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":2468,"byte_end":2528,"line_start":71,"line_end":71,"column_start":1,"column_end":61}},{"value":"/    let qword_val: u64 = key.get_value(\"TestQWORD\")?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":2529,"byte_end":2585,"line_start":72,"line_end":72,"column_start":1,"column_end":57}},{"value":"/    println!(\"TestQWORD = {}\", qword_val);","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":2586,"byte_end":2631,"line_start":73,"line_end":73,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":2632,"byte_end":2635,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/    key.create_subkey(\"sub\\\\key\")?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":2636,"byte_end":2674,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/    hkcu.delete_subkey_all(&path)?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":2675,"byte_end":2713,"line_start":76,"line_end":76,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":2714,"byte_end":2717,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/    println!(\"Trying to open nonexistent key...\");","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":2718,"byte_end":2771,"line_start":78,"line_end":78,"column_start":1,"column_end":54}},{"value":"/    hkcu.open_subkey(&path).unwrap_or_else(|e| match e.kind() {","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":2772,"byte_end":2838,"line_start":79,"line_end":79,"column_start":1,"column_end":67}},{"value":"/        io::ErrorKind::NotFound => panic!(\"Key doesn't exist\"),","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":2839,"byte_end":2905,"line_start":80,"line_end":80,"column_start":1,"column_end":67}},{"value":"/        io::ErrorKind::PermissionDenied => panic!(\"Access denied\"),","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":2906,"byte_end":2976,"line_start":81,"line_end":81,"column_start":1,"column_end":71}},{"value":"/        _ => panic!(\"{:?}\", e),","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":2977,"byte_end":3011,"line_start":82,"line_end":82,"column_start":1,"column_end":35}},{"value":"/    });","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3012,"byte_end":3022,"line_start":83,"line_end":83,"column_start":1,"column_end":11}},{"value":"/    Ok(())","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3023,"byte_end":3036,"line_start":84,"line_end":84,"column_start":1,"column_end":14}},{"value":"/}","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3037,"byte_end":3041,"line_start":85,"line_end":85,"column_start":1,"column_end":5}},{"value":"/```","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3042,"byte_end":3048,"line_start":86,"line_end":86,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3049,"byte_end":3052,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/### Iterators","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3053,"byte_end":3069,"line_start":88,"line_end":88,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3070,"byte_end":3073,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/```no_run","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3074,"byte_end":3086,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/extern crate winreg;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3087,"byte_end":3110,"line_start":91,"line_end":91,"column_start":1,"column_end":24}},{"value":"/use std::io;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3111,"byte_end":3126,"line_start":92,"line_end":92,"column_start":1,"column_end":16}},{"value":"/use winreg::RegKey;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3127,"byte_end":3149,"line_start":93,"line_end":93,"column_start":1,"column_end":23}},{"value":"/use winreg::enums::*;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3150,"byte_end":3174,"line_start":94,"line_end":94,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3175,"byte_end":3178,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3179,"byte_end":3211,"line_start":96,"line_end":96,"column_start":1,"column_end":33}},{"value":"/    println!(\"File extensions, registered in system:\");","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3212,"byte_end":3270,"line_start":97,"line_end":97,"column_start":1,"column_end":59}},{"value":"/    for i in RegKey::predef(HKEY_CLASSES_ROOT)","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3271,"byte_end":3320,"line_start":98,"line_end":98,"column_start":1,"column_end":50}},{"value":"/        .enum_keys().map(|x| x.unwrap())","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3321,"byte_end":3364,"line_start":99,"line_end":99,"column_start":1,"column_end":44}},{"value":"/        .filter(|x| x.starts_with(\".\"))","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3365,"byte_end":3407,"line_start":100,"line_end":100,"column_start":1,"column_end":43}},{"value":"/    {","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3408,"byte_end":3416,"line_start":101,"line_end":101,"column_start":1,"column_end":9}},{"value":"/        println!(\"{}\", i);","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3417,"byte_end":3446,"line_start":102,"line_end":102,"column_start":1,"column_end":30}},{"value":"/    }","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3447,"byte_end":3455,"line_start":103,"line_end":103,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3456,"byte_end":3459,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/    let system = RegKey::predef(HKEY_LOCAL_MACHINE)","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3460,"byte_end":3514,"line_start":105,"line_end":105,"column_start":1,"column_end":55}},{"value":"/        .open_subkey(\"HARDWARE\\\\DESCRIPTION\\\\System\")?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3515,"byte_end":3573,"line_start":106,"line_end":106,"column_start":1,"column_end":59}},{"value":"/    for (name, value) in system.enum_values().map(|x| x.unwrap()) {","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3574,"byte_end":3644,"line_start":107,"line_end":107,"column_start":1,"column_end":71}},{"value":"/        println!(\"{} = {:?}\", name, value);","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3645,"byte_end":3691,"line_start":108,"line_end":108,"column_start":1,"column_end":47}},{"value":"/    }","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3692,"byte_end":3700,"line_start":109,"line_end":109,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3701,"byte_end":3704,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/    Ok(())","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3705,"byte_end":3718,"line_start":111,"line_end":111,"column_start":1,"column_end":14}},{"value":"/}","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3719,"byte_end":3723,"line_start":112,"line_end":112,"column_start":1,"column_end":5}},{"value":"/```","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3724,"byte_end":3730,"line_start":113,"line_end":113,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":3731,"byte_end":3734,"line_start":114,"line_end":114,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"enums","qualname":"::enums","value":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":150},{"krate":0,"index":283},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":151},{"krate":0,"index":327},{"krate":0,"index":334},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":152}],"decl_id":null,"docs":" `use winreg::enums::*;` to import all needed enumerations and constants\n","sig":null,"attributes":[{"value":"/ `use winreg::enums::*;` to import all needed enumerations and constants","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":36222,"byte_end":36297,"line_start":7,"line_end":7,"column_start":1,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":37189,"byte_end":37197,"line_start":32,"line_end":32,"column_start":1,"column_end":9},"name":"REG_NONE","qualname":"::enums::RegType::REG_NONE","value":"RegType::REG_NONE","parent":{"krate":0,"index":283},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":37199,"byte_end":37205,"line_start":33,"line_end":33,"column_start":1,"column_end":7},"name":"REG_SZ","qualname":"::enums::RegType::REG_SZ","value":"RegType::REG_SZ","parent":{"krate":0,"index":283},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":37207,"byte_end":37220,"line_start":34,"line_end":34,"column_start":1,"column_end":14},"name":"REG_EXPAND_SZ","qualname":"::enums::RegType::REG_EXPAND_SZ","value":"RegType::REG_EXPAND_SZ","parent":{"krate":0,"index":283},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":37222,"byte_end":37232,"line_start":35,"line_end":35,"column_start":1,"column_end":11},"name":"REG_BINARY","qualname":"::enums::RegType::REG_BINARY","value":"RegType::REG_BINARY","parent":{"krate":0,"index":283},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":37234,"byte_end":37243,"line_start":36,"line_end":36,"column_start":1,"column_end":10},"name":"REG_DWORD","qualname":"::enums::RegType::REG_DWORD","value":"RegType::REG_DWORD","parent":{"krate":0,"index":283},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":299},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":37245,"byte_end":37265,"line_start":37,"line_end":37,"column_start":1,"column_end":21},"name":"REG_DWORD_BIG_ENDIAN","qualname":"::enums::RegType::REG_DWORD_BIG_ENDIAN","value":"RegType::REG_DWORD_BIG_ENDIAN","parent":{"krate":0,"index":283},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":37267,"byte_end":37275,"line_start":38,"line_end":38,"column_start":1,"column_end":9},"name":"REG_LINK","qualname":"::enums::RegType::REG_LINK","value":"RegType::REG_LINK","parent":{"krate":0,"index":283},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":37277,"byte_end":37289,"line_start":39,"line_end":39,"column_start":1,"column_end":13},"name":"REG_MULTI_SZ","qualname":"::enums::RegType::REG_MULTI_SZ","value":"RegType::REG_MULTI_SZ","parent":{"krate":0,"index":283},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":37291,"byte_end":37308,"line_start":40,"line_end":40,"column_start":1,"column_end":18},"name":"REG_RESOURCE_LIST","qualname":"::enums::RegType::REG_RESOURCE_LIST","value":"RegType::REG_RESOURCE_LIST","parent":{"krate":0,"index":283},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":37310,"byte_end":37338,"line_start":41,"line_end":41,"column_start":1,"column_end":29},"name":"REG_FULL_RESOURCE_DESCRIPTOR","qualname":"::enums::RegType::REG_FULL_RESOURCE_DESCRIPTOR","value":"RegType::REG_FULL_RESOURCE_DESCRIPTOR","parent":{"krate":0,"index":283},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":37340,"byte_end":37370,"line_start":42,"line_end":42,"column_start":1,"column_end":31},"name":"REG_RESOURCE_REQUIREMENTS_LIST","qualname":"::enums::RegType::REG_RESOURCE_REQUIREMENTS_LIST","value":"RegType::REG_RESOURCE_REQUIREMENTS_LIST","parent":{"krate":0,"index":283},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":37372,"byte_end":37381,"line_start":43,"line_end":43,"column_start":1,"column_end":10},"name":"REG_QWORD","qualname":"::enums::RegType::REG_QWORD","value":"RegType::REG_QWORD","parent":{"krate":0,"index":283},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":37128,"byte_end":37135,"line_start":31,"line_end":31,"column_start":14,"column_end":21},"name":"RegType","qualname":"::enums::RegType","value":"pub enum RegType {\n    REG_NONE = ,\n    REG_SZ = ,\n    REG_EXPAND_SZ = ,\n    REG_BINARY = ,\n    REG_DWORD = ,\n    REG_DWORD_BIG_ENDIAN = ,\n    REG_LINK = ,\n    REG_MULTI_SZ = ,\n    REG_RESOURCE_LIST = ,\n    REG_FULL_RESOURCE_DESCRIPTOR = ,\n    REG_RESOURCE_REQUIREMENTS_LIST = ,\n    REG_QWORD = ,\n}","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":287},{"krate":0,"index":290},{"krate":0,"index":293},{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":308},{"krate":0,"index":311},{"krate":0,"index":314},{"krate":0,"index":317}],"decl_id":null,"docs":"Enumeration of possible registry value types\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":36947,"byte_end":36977,"line_start":23,"line_end":23,"column_start":9,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":37492,"byte_end":37511,"line_start":48,"line_end":48,"column_start":1,"column_end":20},"name":"REG_CREATED_NEW_KEY","qualname":"::enums::RegDisposition::REG_CREATED_NEW_KEY","value":"RegDisposition::REG_CREATED_NEW_KEY","parent":{"krate":0,"index":327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":37513,"byte_end":37536,"line_start":49,"line_end":49,"column_start":1,"column_end":24},"name":"REG_OPENED_EXISTING_KEY","qualname":"::enums::RegDisposition::REG_OPENED_EXISTING_KEY","value":"RegDisposition::REG_OPENED_EXISTING_KEY","parent":{"krate":0,"index":327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":37426,"byte_end":37440,"line_start":47,"line_end":47,"column_start":14,"column_end":28},"name":"RegDisposition","qualname":"::enums::RegDisposition","value":"pub enum RegDisposition {\n    REG_CREATED_NEW_KEY = ,\n    REG_OPENED_EXISTING_KEY = ,\n}","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":331}],"decl_id":null,"docs":"Enumeration of possible disposition values\n","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\enums.rs","byte_start":36947,"byte_end":36977,"line_start":23,"line_end":23,"column_start":9,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\types.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"types","qualname":"::types","value":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\types.rs","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":197},{"krate":0,"index":199},{"krate":0,"index":201},{"krate":0,"index":203},{"krate":0,"index":341},{"krate":0,"index":343},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":204},{"krate":0,"index":351},{"krate":0,"index":353},{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":205},{"krate":0,"index":207}],"decl_id":null,"docs":" Traits for loading/saving Registry values\n","sig":null,"attributes":[{"value":"/ Traits for loading/saving Registry values","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\types.rs","byte_start":37786,"byte_end":37831,"line_start":7,"line_end":7,"column_start":1,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\types.rs","byte_start":38530,"byte_end":38542,"line_start":25,"line_end":25,"column_start":11,"column_end":23},"name":"FromRegValue","qualname":"::types::FromRegValue","value":"FromRegValue: Sized","parent":null,"children":[{"krate":0,"index":185}],"decl_id":null,"docs":" A trait for types that can be loaded from registry values.","sig":null,"attributes":[{"value":"/ A trait for types that can be loaded from registry values.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\types.rs","byte_start":38048,"byte_end":38110,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\types.rs","byte_start":38111,"byte_end":38114,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ **NOTE:** Uses `from_utf16_lossy` when converting to `String`.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\types.rs","byte_start":38115,"byte_end":38181,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\types.rs","byte_start":38182,"byte_end":38185,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ **NOTE:** When converting to `String` or `OsString`, trailing `NULL` characters are trimmed","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\types.rs","byte_start":38186,"byte_end":38281,"line_start":21,"line_end":21,"column_start":1,"column_end":96}},{"value":"/ and line separating `NULL` characters in `REG_MULTI_SZ` are replaced by `\\n`","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\types.rs","byte_start":38282,"byte_end":38362,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ effectively representing the value as a multiline string.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\types.rs","byte_start":38363,"byte_end":38424,"line_start":23,"line_end":23,"column_start":1,"column_end":62}},{"value":"/ When converting to `Vec<String>` or `Vec<OsString>` `NULL` is used as a strings separator.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\types.rs","byte_start":38425,"byte_end":38519,"line_start":24,"line_end":24,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\types.rs","byte_start":38559,"byte_end":38573,"line_start":26,"line_end":26,"column_start":8,"column_end":22},"name":"from_reg_value","qualname":"::types::FromRegValue::from_reg_value","value":"pub fn from_reg_value(&RegValue) -> io::Result<Self>","parent":{"krate":0,"index":184},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\types.rs","byte_start":42253,"byte_end":42263,"line_start":133,"line_end":133,"column_start":11,"column_end":21},"name":"ToRegValue","qualname":"::types::ToRegValue","value":"ToRegValue","parent":null,"children":[{"krate":0,"index":202}],"decl_id":null,"docs":" A trait for types that can be written into registry values.","sig":null,"attributes":[{"value":"/ A trait for types that can be written into registry values.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\types.rs","byte_start":42080,"byte_end":42143,"line_start":130,"line_end":130,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\types.rs","byte_start":42144,"byte_end":42147,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ **NOTE:** Adds trailing `NULL` character to `str`, `String`, `OsStr` and `OsString` values","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\types.rs","byte_start":42148,"byte_end":42242,"line_start":132,"line_end":132,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\types.rs","byte_start":42273,"byte_end":42285,"line_start":134,"line_end":134,"column_start":8,"column_end":20},"name":"to_reg_value","qualname":"::types::ToRegValue::to_reg_value","value":"pub fn to_reg_value(&Self) -> RegValue","parent":{"krate":0,"index":201},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":4826,"byte_end":4840,"line_start":157,"line_end":157,"column_start":12,"column_end":26},"name":"RegKeyMetadata","qualname":"::RegKeyMetadata","value":"RegKeyMetadata { sub_keys, max_sub_key_len, max_class_len, values, max_value_name_len, max_value_len, last_write_time }","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368}],"decl_id":null,"docs":" Metadata returned by `RegKey::query_info`\n","sig":null,"attributes":[{"value":"/ Metadata returned by `RegKey::query_info`","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":4743,"byte_end":4788,"line_start":155,"line_end":155,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":4913,"byte_end":4921,"line_start":160,"line_end":160,"column_start":9,"column_end":17},"name":"sub_keys","qualname":"::RegKeyMetadata::sub_keys","value":"u32","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":4938,"byte_end":4953,"line_start":161,"line_end":161,"column_start":9,"column_end":24},"name":"max_sub_key_len","qualname":"::RegKeyMetadata::max_sub_key_len","value":"u32","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":4970,"byte_end":4983,"line_start":162,"line_end":162,"column_start":9,"column_end":22},"name":"max_class_len","qualname":"::RegKeyMetadata::max_class_len","value":"u32","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":5000,"byte_end":5006,"line_start":163,"line_end":163,"column_start":9,"column_end":15},"name":"values","qualname":"::RegKeyMetadata::values","value":"u32","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":5023,"byte_end":5041,"line_start":164,"line_end":164,"column_start":9,"column_end":27},"name":"max_value_name_len","qualname":"::RegKeyMetadata::max_value_name_len","value":"u32","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":5058,"byte_end":5071,"line_start":165,"line_end":165,"column_start":9,"column_end":22},"name":"max_value_len","qualname":"::RegKeyMetadata::max_value_len","value":"u32","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":5126,"byte_end":5141,"line_start":167,"line_end":167,"column_start":9,"column_end":24},"name":"last_write_time","qualname":"::RegKeyMetadata::last_write_time","value":"winapi::shared::minwindef::FILETIME","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":5269,"byte_end":5295,"line_start":172,"line_end":172,"column_start":12,"column_end":38},"name":"get_last_write_time_system","qualname":"<RegKeyMetadata>::get_last_write_time_system","value":"pub fn get_last_write_time_system(&Self) -> SYSTEMTIME","parent":null,"children":[],"decl_id":null,"docs":" Returns `last_write_time` field as `winapi::um::minwinbase::SYSTEMTIME`\n","sig":null,"attributes":[{"value":"/ Returns `last_write_time` field as `winapi::um::minwinbase::SYSTEMTIME`","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":5182,"byte_end":5257,"line_start":171,"line_end":171,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":6015,"byte_end":6023,"line_start":196,"line_end":196,"column_start":12,"column_end":20},"name":"RegValue","qualname":"::RegValue","value":"RegValue { bytes, vtype }","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375}],"decl_id":null,"docs":" Raw registry value\n","sig":null,"attributes":[{"value":"/ Raw registry value","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":5960,"byte_end":5982,"line_start":194,"line_end":194,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":374},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":6034,"byte_end":6039,"line_start":197,"line_end":197,"column_start":9,"column_end":14},"name":"bytes","qualname":"::RegValue::bytes","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":375},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":6058,"byte_end":6063,"line_start":198,"line_end":198,"column_start":9,"column_end":14},"name":"vtype","qualname":"::RegValue::vtype","value":"enums::RegType","parent":{"krate":0,"index":373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":6968,"byte_end":6974,"line_start":230,"line_end":230,"column_start":12,"column_end":18},"name":"RegKey","qualname":"::RegKey","value":"RegKey {  }","parent":null,"children":[{"krate":0,"index":381}],"decl_id":null,"docs":" Handle of opened registry key\n","sig":null,"attributes":[{"value":"/ Handle of opened registry key","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":6906,"byte_end":6939,"line_start":228,"line_end":228,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7608,"byte_end":7614,"line_start":257,"line_end":257,"column_start":18,"column_end":24},"name":"predef","qualname":"<RegKey>::predef","value":"pub const fn predef(HKEY) -> RegKey","parent":null,"children":[],"decl_id":null,"docs":" Open one of predefined keys:","sig":null,"attributes":[{"value":"/ Open one of predefined keys:","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7046,"byte_end":7078,"line_start":237,"line_end":237,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7083,"byte_end":7086,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ * `HKEY_CLASSES_ROOT`","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7091,"byte_end":7116,"line_start":239,"line_end":239,"column_start":5,"column_end":30}},{"value":"/ * `HKEY_CURRENT_USER`","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7121,"byte_end":7146,"line_start":240,"line_end":240,"column_start":5,"column_end":30}},{"value":"/ * `HKEY_LOCAL_MACHINE`","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7151,"byte_end":7177,"line_start":241,"line_end":241,"column_start":5,"column_end":31}},{"value":"/ * `HKEY_USERS`","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7182,"byte_end":7200,"line_start":242,"line_end":242,"column_start":5,"column_end":23}},{"value":"/ * `HKEY_PERFORMANCE_DATA`","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7205,"byte_end":7234,"line_start":243,"line_end":243,"column_start":5,"column_end":34}},{"value":"/ * `HKEY_PERFORMANCE_TEXT`","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7239,"byte_end":7268,"line_start":244,"line_end":244,"column_start":5,"column_end":34}},{"value":"/ * `HKEY_PERFORMANCE_NLSTEXT`","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7273,"byte_end":7305,"line_start":245,"line_end":245,"column_start":5,"column_end":37}},{"value":"/ * `HKEY_CURRENT_CONFIG`","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7310,"byte_end":7337,"line_start":246,"line_end":246,"column_start":5,"column_end":32}},{"value":"/ * `HKEY_DYN_DATA`","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7342,"byte_end":7363,"line_start":247,"line_end":247,"column_start":5,"column_end":26}},{"value":"/ * `HKEY_CURRENT_USER_LOCAL_SETTINGS`","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7368,"byte_end":7408,"line_start":248,"line_end":248,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7413,"byte_end":7416,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7421,"byte_end":7435,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7440,"byte_end":7443,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7448,"byte_end":7461,"line_start":252,"line_end":252,"column_start":5,"column_end":18}},{"value":"/ # use winreg::RegKey;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7466,"byte_end":7491,"line_start":253,"line_end":253,"column_start":5,"column_end":30}},{"value":"/ # use winreg::enums::*;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7496,"byte_end":7523,"line_start":254,"line_end":254,"column_start":5,"column_end":32}},{"value":"/ let hklm = RegKey::predef(HKEY_LOCAL_MACHINE);","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7528,"byte_end":7578,"line_start":255,"line_end":255,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7583,"byte_end":7590,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":8198,"byte_end":8210,"line_start":276,"line_end":276,"column_start":12,"column_end":24},"name":"load_app_key","qualname":"<RegKey>::load_app_key","value":"pub fn load_app_key<N: AsRef<OsStr>>(N, bool) -> io::Result<RegKey>","parent":null,"children":[],"decl_id":null,"docs":" Load a registry hive from a file as an application hive.\n If `lock` is set to `true`, then the hive cannot be loaded again until\n it's unloaded (i.e. all keys from it go out of scope).","sig":null,"attributes":[{"value":"/ Load a registry hive from a file as an application hive.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7674,"byte_end":7734,"line_start":261,"line_end":261,"column_start":5,"column_end":65}},{"value":"/ If `lock` is set to `true`, then the hive cannot be loaded again until","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7739,"byte_end":7813,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ it's unloaded (i.e. all keys from it go out of scope).","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7818,"byte_end":7876,"line_start":263,"line_end":263,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7881,"byte_end":7884,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7889,"byte_end":7903,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7908,"byte_end":7911,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7916,"byte_end":7929,"line_start":267,"line_end":267,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7934,"byte_end":7962,"line_start":268,"line_end":268,"column_start":5,"column_end":33}},{"value":"/ # use winreg::RegKey;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7967,"byte_end":7992,"line_start":269,"line_end":269,"column_start":5,"column_end":30}},{"value":"/ # use winreg::enums::*;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7997,"byte_end":8024,"line_start":270,"line_end":270,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":8029,"byte_end":8076,"line_start":271,"line_end":271,"column_start":5,"column_end":52}},{"value":"/ let handle = RegKey::load_app_key(\"C:\\\\myhive.dat\", false)?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":8081,"byte_end":8145,"line_start":272,"line_end":272,"column_start":5,"column_end":69}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":8150,"byte_end":8162,"line_start":273,"line_end":273,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":8167,"byte_end":8174,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":8179,"byte_end":8186,"line_start":275,"line_end":275,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":9082,"byte_end":9105,"line_start":300,"line_end":300,"column_start":12,"column_end":35},"name":"load_app_key_with_flags","qualname":"<RegKey>::load_app_key_with_flags","value":"pub fn load_app_key_with_flags<N: AsRef<OsStr>>(N, winapi_reg::REGSAM, DWORD)\n-> io::Result<RegKey>","parent":null,"children":[],"decl_id":null,"docs":" Load a registry hive from a file as an application hive with desired\n permissions and options. If `options` is set to `REG_PROCESS_APPKEY`,\n then the hive cannot be loaded again until it's unloaded (i.e. all keys\n from it go out of scope).\n # Examples","sig":null,"attributes":[{"value":"/ Load a registry hive from a file as an application hive with desired","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":8487,"byte_end":8559,"line_start":285,"line_end":285,"column_start":5,"column_end":77}},{"value":"/ permissions and options. If `options` is set to `REG_PROCESS_APPKEY`,","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":8564,"byte_end":8637,"line_start":286,"line_end":286,"column_start":5,"column_end":78}},{"value":"/ then the hive cannot be loaded again until it's unloaded (i.e. all keys","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":8642,"byte_end":8717,"line_start":287,"line_end":287,"column_start":5,"column_end":80}},{"value":"/ from it go out of scope).","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":8722,"byte_end":8751,"line_start":288,"line_end":288,"column_start":5,"column_end":34}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":8756,"byte_end":8770,"line_start":289,"line_end":289,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":8775,"byte_end":8778,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":8783,"byte_end":8796,"line_start":291,"line_end":291,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":8801,"byte_end":8829,"line_start":292,"line_end":292,"column_start":5,"column_end":33}},{"value":"/ # use winreg::RegKey;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":8834,"byte_end":8859,"line_start":293,"line_end":293,"column_start":5,"column_end":30}},{"value":"/ # use winreg::enums::*;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":8864,"byte_end":8891,"line_start":294,"line_end":294,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":8896,"byte_end":8943,"line_start":295,"line_end":295,"column_start":5,"column_end":52}},{"value":"/ let handle = RegKey::load_app_key_with_flags(\"C:\\\\myhive.dat\", KEY_READ, 0)?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":8948,"byte_end":9029,"line_start":296,"line_end":296,"column_start":5,"column_end":86}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":9034,"byte_end":9046,"line_start":297,"line_end":297,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":9051,"byte_end":9058,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":9063,"byte_end":9070,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":10025,"byte_end":10035,"line_start":331,"line_end":331,"column_start":18,"column_end":28},"name":"raw_handle","qualname":"<RegKey>::raw_handle","value":"pub const fn raw_handle(&Self) -> HKEY","parent":null,"children":[],"decl_id":null,"docs":" Return inner winapi HKEY of a key:","sig":null,"attributes":[{"value":"/ Return inner winapi HKEY of a key:","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":9583,"byte_end":9621,"line_start":316,"line_end":316,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":9626,"byte_end":9629,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":9634,"byte_end":9648,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":9653,"byte_end":9656,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":9661,"byte_end":9674,"line_start":320,"line_end":320,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":9679,"byte_end":9707,"line_start":321,"line_end":321,"column_start":5,"column_end":33}},{"value":"/ # use winreg::RegKey;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":9712,"byte_end":9737,"line_start":322,"line_end":322,"column_start":5,"column_end":30}},{"value":"/ # use winreg::enums::*;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":9742,"byte_end":9769,"line_start":323,"line_end":323,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":9774,"byte_end":9821,"line_start":324,"line_end":324,"column_start":5,"column_end":52}},{"value":"/ let hklm = RegKey::predef(HKEY_LOCAL_MACHINE);","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":9826,"byte_end":9876,"line_start":325,"line_end":325,"column_start":5,"column_end":55}},{"value":"/ let soft = hklm.open_subkey(\"SOFTWARE\")?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":9881,"byte_end":9926,"line_start":326,"line_end":326,"column_start":5,"column_end":50}},{"value":"/ let handle = soft.raw_handle();","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":9931,"byte_end":9966,"line_start":327,"line_end":327,"column_start":5,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":9971,"byte_end":9983,"line_start":328,"line_end":328,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":9988,"byte_end":9995,"line_start":329,"line_end":329,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":10000,"byte_end":10007,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":10701,"byte_end":10712,"line_start":352,"line_end":352,"column_start":12,"column_end":23},"name":"open_subkey","qualname":"<RegKey>::open_subkey","value":"pub fn open_subkey<P: AsRef<OsStr>>(&Self, P) -> io::Result<RegKey>","parent":null,"children":[],"decl_id":null,"docs":" Open subkey with `KEY_READ` permissions.\n Will open another handle to itself if `path` is an empty string.\n To open with different permissions use `open_subkey_with_flags`.\n You can also use `create_subkey` to open with `KEY_ALL_ACCESS` permissions.","sig":null,"attributes":[{"value":"/ Open subkey with `KEY_READ` permissions.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":10082,"byte_end":10126,"line_start":335,"line_end":335,"column_start":5,"column_end":49}},{"value":"/ Will open another handle to itself if `path` is an empty string.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":10131,"byte_end":10199,"line_start":336,"line_end":336,"column_start":5,"column_end":73}},{"value":"/ To open with different permissions use `open_subkey_with_flags`.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":10204,"byte_end":10272,"line_start":337,"line_end":337,"column_start":5,"column_end":73}},{"value":"/ You can also use `create_subkey` to open with `KEY_ALL_ACCESS` permissions.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":10277,"byte_end":10356,"line_start":338,"line_end":338,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":10361,"byte_end":10364,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":10369,"byte_end":10383,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":10388,"byte_end":10391,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":10396,"byte_end":10409,"line_start":342,"line_end":342,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":10414,"byte_end":10442,"line_start":343,"line_end":343,"column_start":5,"column_end":33}},{"value":"/ # use winreg::RegKey;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":10447,"byte_end":10472,"line_start":344,"line_end":344,"column_start":5,"column_end":30}},{"value":"/ # use winreg::enums::*;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":10477,"byte_end":10504,"line_start":345,"line_end":345,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":10509,"byte_end":10556,"line_start":346,"line_end":346,"column_start":5,"column_end":52}},{"value":"/ let soft = RegKey::predef(HKEY_CURRENT_USER)","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":10561,"byte_end":10609,"line_start":347,"line_end":347,"column_start":5,"column_end":53}},{"value":"/     .open_subkey(\"Software\")?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":10614,"byte_end":10648,"line_start":348,"line_end":348,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":10653,"byte_end":10665,"line_start":349,"line_end":349,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":10670,"byte_end":10677,"line_start":350,"line_end":350,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":10682,"byte_end":10689,"line_start":351,"line_end":351,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":11333,"byte_end":11355,"line_start":371,"line_end":371,"column_start":12,"column_end":34},"name":"open_subkey_with_flags","qualname":"<RegKey>::open_subkey_with_flags","value":"pub fn open_subkey_with_flags<P: AsRef<OsStr>>(&Self, P, winapi_reg::REGSAM)\n-> io::Result<RegKey>","parent":null,"children":[],"decl_id":null,"docs":" Open subkey with desired permissions.\n Will open another handle to itself if `path` is an empty string.","sig":null,"attributes":[{"value":"/ Open subkey with desired permissions.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":10840,"byte_end":10881,"line_start":356,"line_end":356,"column_start":5,"column_end":46}},{"value":"/ Will open another handle to itself if `path` is an empty string.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":10886,"byte_end":10954,"line_start":357,"line_end":357,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":10959,"byte_end":10962,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":10967,"byte_end":10981,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":10986,"byte_end":10989,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":10994,"byte_end":11007,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":11012,"byte_end":11040,"line_start":362,"line_end":362,"column_start":5,"column_end":33}},{"value":"/ # use winreg::RegKey;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":11045,"byte_end":11070,"line_start":363,"line_end":363,"column_start":5,"column_end":30}},{"value":"/ # use winreg::enums::*;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":11075,"byte_end":11102,"line_start":364,"line_end":364,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":11107,"byte_end":11154,"line_start":365,"line_end":365,"column_start":5,"column_end":52}},{"value":"/ let hklm = RegKey::predef(HKEY_LOCAL_MACHINE);","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":11159,"byte_end":11209,"line_start":366,"line_end":366,"column_start":5,"column_end":55}},{"value":"/ hklm.open_subkey_with_flags(\"SOFTWARE\\\\Microsoft\", KEY_READ)?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":11214,"byte_end":11280,"line_start":367,"line_end":367,"column_start":5,"column_end":71}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":11285,"byte_end":11297,"line_start":368,"line_end":368,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":11302,"byte_end":11309,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":11314,"byte_end":11321,"line_start":370,"line_end":370,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":13873,"byte_end":13886,"line_start":447,"line_end":447,"column_start":12,"column_end":25},"name":"create_subkey","qualname":"<RegKey>::create_subkey","value":"pub fn create_subkey<P: AsRef<OsStr>>(&Self, P)\n-> io::Result<(RegKey, RegDisposition)>","parent":null,"children":[],"decl_id":null,"docs":" Create subkey (and all missing parent keys)\n and open it with `KEY_ALL_ACCESS` permissions.\n Will just open key if it already exists.\n If succeeds returns a tuple with the created subkey and its disposition,\n which can be `REG_CREATED_NEW_KEY` or `REG_OPENED_EXISTING_KEY`.\n Will open another handle to itself if `path` is an empty string.\n To create with different permissions use `create_subkey_with_flags`.","sig":null,"attributes":[{"value":"/ Create subkey (and all missing parent keys)","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":12831,"byte_end":12878,"line_start":422,"line_end":422,"column_start":5,"column_end":52}},{"value":"/ and open it with `KEY_ALL_ACCESS` permissions.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":12883,"byte_end":12933,"line_start":423,"line_end":423,"column_start":5,"column_end":55}},{"value":"/ Will just open key if it already exists.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":12938,"byte_end":12982,"line_start":424,"line_end":424,"column_start":5,"column_end":49}},{"value":"/ If succeeds returns a tuple with the created subkey and its disposition,","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":12987,"byte_end":13063,"line_start":425,"line_end":425,"column_start":5,"column_end":81}},{"value":"/ which can be `REG_CREATED_NEW_KEY` or `REG_OPENED_EXISTING_KEY`.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":13068,"byte_end":13136,"line_start":426,"line_end":426,"column_start":5,"column_end":73}},{"value":"/ Will open another handle to itself if `path` is an empty string.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":13141,"byte_end":13209,"line_start":427,"line_end":427,"column_start":5,"column_end":73}},{"value":"/ To create with different permissions use `create_subkey_with_flags`.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":13214,"byte_end":13286,"line_start":428,"line_end":428,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":13291,"byte_end":13294,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":13299,"byte_end":13313,"line_start":430,"line_end":430,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":13318,"byte_end":13321,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":13326,"byte_end":13339,"line_start":432,"line_end":432,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":13344,"byte_end":13372,"line_start":433,"line_end":433,"column_start":5,"column_end":33}},{"value":"/ # use winreg::RegKey;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":13377,"byte_end":13402,"line_start":434,"line_end":434,"column_start":5,"column_end":30}},{"value":"/ use winreg::enums::*;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":13407,"byte_end":13432,"line_start":435,"line_end":435,"column_start":5,"column_end":30}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":13437,"byte_end":13484,"line_start":436,"line_end":436,"column_start":5,"column_end":52}},{"value":"/ let hkcu = RegKey::predef(HKEY_CURRENT_USER);","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":13489,"byte_end":13538,"line_start":437,"line_end":437,"column_start":5,"column_end":54}},{"value":"/ let (settings, disp) = hkcu.create_subkey(\"Software\\\\MyProduct\\\\Settings\")?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":13543,"byte_end":13623,"line_start":438,"line_end":438,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":13628,"byte_end":13631,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ match disp {","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":13636,"byte_end":13652,"line_start":440,"line_end":440,"column_start":5,"column_end":21}},{"value":"/     REG_CREATED_NEW_KEY => println!(\"A new key has been created\"),","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":13657,"byte_end":13727,"line_start":441,"line_end":441,"column_start":5,"column_end":75}},{"value":"/     REG_OPENED_EXISTING_KEY => println!(\"An existing key has been opened\")","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":13732,"byte_end":13810,"line_start":442,"line_end":442,"column_start":5,"column_end":83}},{"value":"/ }","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":13815,"byte_end":13820,"line_start":443,"line_end":443,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":13825,"byte_end":13837,"line_start":444,"line_end":444,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":13842,"byte_end":13849,"line_start":445,"line_end":445,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":13854,"byte_end":13861,"line_start":446,"line_end":446,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":14047,"byte_end":14071,"line_start":451,"line_end":451,"column_start":12,"column_end":36},"name":"create_subkey_with_flags","qualname":"<RegKey>::create_subkey_with_flags","value":"pub fn create_subkey_with_flags<P: AsRef<OsStr>>(&Self, P, winapi_reg::REGSAM)\n-> io::Result<(RegKey, RegDisposition)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":16953,"byte_end":16962,"line_start":541,"line_end":541,"column_start":12,"column_end":21},"name":"copy_tree","qualname":"<RegKey>::copy_tree","value":"pub fn copy_tree<P: AsRef<OsStr>>(&Self, P, &RegKey) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Copy all the values and subkeys from `path` to `dest` key.\n WIll copy the content of `self` if `path` is an empty string.","sig":null,"attributes":[{"value":"/ Copy all the values and subkeys from `path` to `dest` key.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":16307,"byte_end":16369,"line_start":524,"line_end":524,"column_start":5,"column_end":67}},{"value":"/ WIll copy the content of `self` if `path` is an empty string.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":16374,"byte_end":16439,"line_start":525,"line_end":525,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":16444,"byte_end":16447,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":16452,"byte_end":16466,"line_start":527,"line_end":527,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":16471,"byte_end":16474,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":16479,"byte_end":16492,"line_start":529,"line_end":529,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":16497,"byte_end":16525,"line_start":530,"line_end":530,"column_start":5,"column_end":33}},{"value":"/ # use winreg::RegKey;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":16530,"byte_end":16555,"line_start":531,"line_end":531,"column_start":5,"column_end":30}},{"value":"/ # use winreg::enums::*;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":16560,"byte_end":16587,"line_start":532,"line_end":532,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":16592,"byte_end":16639,"line_start":533,"line_end":533,"column_start":5,"column_end":52}},{"value":"/ let hkcu = RegKey::predef(HKEY_CURRENT_USER);","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":16644,"byte_end":16693,"line_start":534,"line_end":534,"column_start":5,"column_end":54}},{"value":"/ let src = hkcu.open_subkey_with_flags(\"Software\\\\MyProduct\", KEY_READ)?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":16698,"byte_end":16774,"line_start":535,"line_end":535,"column_start":5,"column_end":81}},{"value":"/ let (dst, dst_disp) = hkcu.create_subkey(\"Software\\\\MyProduct\\\\Section2\")?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":16779,"byte_end":16858,"line_start":536,"line_end":536,"column_start":5,"column_end":84}},{"value":"/ src.copy_tree(\"Section1\", &dst)?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":16863,"byte_end":16900,"line_start":537,"line_end":537,"column_start":5,"column_end":42}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":16905,"byte_end":16917,"line_start":538,"line_end":538,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":16922,"byte_end":16929,"line_start":539,"line_end":539,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":16934,"byte_end":16941,"line_start":540,"line_end":540,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":17243,"byte_end":17253,"line_start":549,"line_end":549,"column_start":12,"column_end":22},"name":"query_info","qualname":"<RegKey>::query_info","value":"pub fn query_info(&Self) -> io::Result<RegKeyMetadata>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":18519,"byte_end":18528,"line_start":587,"line_end":587,"column_start":18,"column_end":27},"name":"enum_keys","qualname":"<RegKey>::enum_keys","value":"pub const fn enum_keys(&Self) -> EnumKeys","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over subkeys names.","sig":null,"attributes":[{"value":"/ Return an iterator over subkeys names.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":18076,"byte_end":18118,"line_start":572,"line_end":572,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":18123,"byte_end":18126,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":18131,"byte_end":18145,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":18150,"byte_end":18153,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":18158,"byte_end":18171,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/ # use winreg::RegKey;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":18176,"byte_end":18201,"line_start":577,"line_end":577,"column_start":5,"column_end":30}},{"value":"/ # use winreg::enums::*;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":18206,"byte_end":18233,"line_start":578,"line_end":578,"column_start":5,"column_end":32}},{"value":"/ println!(\"File extensions, registered in this system:\");","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":18238,"byte_end":18298,"line_start":579,"line_end":579,"column_start":5,"column_end":65}},{"value":"/ for i in RegKey::predef(HKEY_CLASSES_ROOT)","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":18303,"byte_end":18349,"line_start":580,"line_end":580,"column_start":5,"column_end":51}},{"value":"/     .enum_keys().map(|x| x.unwrap())","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":18354,"byte_end":18394,"line_start":581,"line_end":581,"column_start":5,"column_end":45}},{"value":"/     .filter(|x| x.starts_with(\".\"))","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":18399,"byte_end":18438,"line_start":582,"line_end":582,"column_start":5,"column_end":44}},{"value":"/ {","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":18443,"byte_end":18448,"line_start":583,"line_end":583,"column_start":5,"column_end":10}},{"value":"/     println!(\"{}\", i);","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":18453,"byte_end":18479,"line_start":584,"line_end":584,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":18484,"byte_end":18489,"line_start":585,"line_end":585,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":18494,"byte_end":18501,"line_start":586,"line_end":586,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":19196,"byte_end":19207,"line_start":611,"line_end":611,"column_start":18,"column_end":29},"name":"enum_values","qualname":"<RegKey>::enum_values","value":"pub const fn enum_values(&Self) -> EnumValues","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over values.","sig":null,"attributes":[{"value":"/ Return an iterator over values.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":18635,"byte_end":18670,"line_start":594,"line_end":594,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":18675,"byte_end":18678,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":18683,"byte_end":18697,"line_start":596,"line_end":596,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":18702,"byte_end":18705,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":18710,"byte_end":18723,"line_start":598,"line_end":598,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":18728,"byte_end":18756,"line_start":599,"line_end":599,"column_start":5,"column_end":33}},{"value":"/ # use winreg::RegKey;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":18761,"byte_end":18786,"line_start":600,"line_end":600,"column_start":5,"column_end":30}},{"value":"/ # use winreg::enums::*;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":18791,"byte_end":18818,"line_start":601,"line_end":601,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":18823,"byte_end":18870,"line_start":602,"line_end":602,"column_start":5,"column_end":52}},{"value":"/ let system = RegKey::predef(HKEY_LOCAL_MACHINE)","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":18875,"byte_end":18926,"line_start":603,"line_end":603,"column_start":5,"column_end":56}},{"value":"/     .open_subkey_with_flags(\"HARDWARE\\\\DESCRIPTION\\\\System\", KEY_READ)?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":18931,"byte_end":19007,"line_start":604,"line_end":604,"column_start":5,"column_end":81}},{"value":"/ for (name, value) in system.enum_values().map(|x| x.unwrap()) {","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":19012,"byte_end":19079,"line_start":605,"line_end":605,"column_start":5,"column_end":72}},{"value":"/     println!(\"{} = {:?}\", name, value);","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":19084,"byte_end":19127,"line_start":606,"line_end":606,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":19132,"byte_end":19137,"line_start":607,"line_end":607,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":19142,"byte_end":19154,"line_start":608,"line_end":608,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":19159,"byte_end":19166,"line_start":609,"line_end":609,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":19171,"byte_end":19178,"line_start":610,"line_end":610,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":19805,"byte_end":19818,"line_start":634,"line_end":634,"column_start":12,"column_end":25},"name":"delete_subkey","qualname":"<RegKey>::delete_subkey","value":"pub fn delete_subkey<P: AsRef<OsStr>>(&Self, P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Delete key. Key names are not case sensitive.\n Cannot delete if it has subkeys.\n Use `delete_subkey_all` for that.","sig":null,"attributes":[{"value":"/ Delete key. Key names are not case sensitive.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":19318,"byte_end":19367,"line_start":618,"line_end":618,"column_start":5,"column_end":54}},{"value":"/ Cannot delete if it has subkeys.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":19372,"byte_end":19408,"line_start":619,"line_end":619,"column_start":5,"column_end":41}},{"value":"/ Use `delete_subkey_all` for that.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":19413,"byte_end":19450,"line_start":620,"line_end":620,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":19455,"byte_end":19458,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":19463,"byte_end":19477,"line_start":622,"line_end":622,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":19482,"byte_end":19485,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":19490,"byte_end":19503,"line_start":624,"line_end":624,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":19508,"byte_end":19536,"line_start":625,"line_end":625,"column_start":5,"column_end":33}},{"value":"/ # use winreg::RegKey;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":19541,"byte_end":19566,"line_start":626,"line_end":626,"column_start":5,"column_end":30}},{"value":"/ # use winreg::enums::*;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":19571,"byte_end":19598,"line_start":627,"line_end":627,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":19603,"byte_end":19650,"line_start":628,"line_end":628,"column_start":5,"column_end":52}},{"value":"/ RegKey::predef(HKEY_CURRENT_USER)","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":19655,"byte_end":19692,"line_start":629,"line_end":629,"column_start":5,"column_end":42}},{"value":"/     .delete_subkey(r\"Software\\MyProduct\\History\")?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":19697,"byte_end":19752,"line_start":630,"line_end":630,"column_start":5,"column_end":60}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":19757,"byte_end":19769,"line_start":631,"line_end":631,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":19774,"byte_end":19781,"line_start":632,"line_end":632,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":19786,"byte_end":19793,"line_start":633,"line_end":633,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":20475,"byte_end":20499,"line_start":653,"line_end":653,"column_start":12,"column_end":36},"name":"delete_subkey_with_flags","qualname":"<RegKey>::delete_subkey_with_flags","value":"pub fn delete_subkey_with_flags<P: AsRef<OsStr>>(&Self, P, winapi_reg::REGSAM)\n-> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Delete key from the desired platform-specific view of the registry.\n Key names are not case sensitive.","sig":null,"attributes":[{"value":"/ Delete key from the desired platform-specific view of the registry.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":19930,"byte_end":20001,"line_start":638,"line_end":638,"column_start":5,"column_end":76}},{"value":"/ Key names are not case sensitive.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":20006,"byte_end":20043,"line_start":639,"line_end":639,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":20048,"byte_end":20051,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":20056,"byte_end":20070,"line_start":641,"line_end":641,"column_start":5,"column_end":19}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":20075,"byte_end":20088,"line_start":642,"line_end":642,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":20093,"byte_end":20121,"line_start":643,"line_end":643,"column_start":5,"column_end":33}},{"value":"/ # use winreg::RegKey;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":20126,"byte_end":20151,"line_start":644,"line_end":644,"column_start":5,"column_end":30}},{"value":"/ # use winreg::enums::*;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":20156,"byte_end":20183,"line_start":645,"line_end":645,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":20188,"byte_end":20235,"line_start":646,"line_end":646,"column_start":5,"column_end":52}},{"value":"/ // delete the key from the 32-bit registry view","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":20240,"byte_end":20291,"line_start":647,"line_end":647,"column_start":5,"column_end":56}},{"value":"/ RegKey::predef(HKEY_LOCAL_MACHINE)","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":20296,"byte_end":20334,"line_start":648,"line_end":648,"column_start":5,"column_end":43}},{"value":"/     .delete_subkey_with_flags(r\"Software\\MyProduct\\History\", KEY_WOW64_32KEY)?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":20339,"byte_end":20422,"line_start":649,"line_end":649,"column_start":5,"column_end":88}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":20427,"byte_end":20439,"line_start":650,"line_end":650,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":20444,"byte_end":20451,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":20456,"byte_end":20463,"line_start":652,"line_end":652,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":22395,"byte_end":22412,"line_start":721,"line_end":721,"column_start":12,"column_end":29},"name":"delete_subkey_all","qualname":"<RegKey>::delete_subkey_all","value":"pub fn delete_subkey_all<P: AsRef<OsStr>>(&Self, P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Recursively delete subkey with all its subkeys and values.\n If `path` is an empty string, the subkeys and values of this key are deleted.","sig":null,"attributes":[{"value":"/ Recursively delete subkey with all its subkeys and values.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":21896,"byte_end":21958,"line_start":706,"line_end":706,"column_start":5,"column_end":67}},{"value":"/ If `path` is an empty string, the subkeys and values of this key are deleted.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":21963,"byte_end":22044,"line_start":707,"line_end":707,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":22049,"byte_end":22052,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":22057,"byte_end":22071,"line_start":709,"line_end":709,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":22076,"byte_end":22079,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":22084,"byte_end":22097,"line_start":711,"line_end":711,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":22102,"byte_end":22130,"line_start":712,"line_end":712,"column_start":5,"column_end":33}},{"value":"/ # use winreg::RegKey;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":22135,"byte_end":22160,"line_start":713,"line_end":713,"column_start":5,"column_end":30}},{"value":"/ # use winreg::enums::*;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":22165,"byte_end":22192,"line_start":714,"line_end":714,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":22197,"byte_end":22244,"line_start":715,"line_end":715,"column_start":5,"column_end":52}},{"value":"/ RegKey::predef(HKEY_CURRENT_USER)","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":22249,"byte_end":22286,"line_start":716,"line_end":716,"column_start":5,"column_end":42}},{"value":"/     .delete_subkey_all(\"Software\\\\MyProduct\")?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":22291,"byte_end":22342,"line_start":717,"line_end":717,"column_start":5,"column_end":56}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":22347,"byte_end":22359,"line_start":718,"line_end":718,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":22364,"byte_end":22371,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":22376,"byte_end":22383,"line_start":720,"line_end":720,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":23684,"byte_end":23693,"line_start":758,"line_end":758,"column_start":12,"column_end":21},"name":"get_value","qualname":"<RegKey>::get_value","value":"pub fn get_value<T: FromRegValue, N: AsRef<OsStr>>(&Self, N) -> io::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Get a value from registry and seamlessly convert it to the specified rust type\n with `FromRegValue` implemented (currently `String`, `u32` and `u64`).\n Will get the `Default` value if `name` is an empty string.","sig":null,"attributes":[{"value":"/ Get a value from registry and seamlessly convert it to the specified rust type","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":22961,"byte_end":23043,"line_start":740,"line_end":740,"column_start":5,"column_end":87}},{"value":"/ with `FromRegValue` implemented (currently `String`, `u32` and `u64`).","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":23048,"byte_end":23122,"line_start":741,"line_end":741,"column_start":5,"column_end":79}},{"value":"/ Will get the `Default` value if `name` is an empty string.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":23127,"byte_end":23189,"line_start":742,"line_end":742,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":23194,"byte_end":23197,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":23202,"byte_end":23216,"line_start":744,"line_end":744,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":23221,"byte_end":23224,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":23229,"byte_end":23242,"line_start":746,"line_end":746,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":23247,"byte_end":23275,"line_start":747,"line_end":747,"column_start":5,"column_end":33}},{"value":"/ # use winreg::RegKey;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":23280,"byte_end":23305,"line_start":748,"line_end":748,"column_start":5,"column_end":30}},{"value":"/ # use winreg::enums::*;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":23310,"byte_end":23337,"line_start":749,"line_end":749,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":23342,"byte_end":23389,"line_start":750,"line_end":750,"column_start":5,"column_end":52}},{"value":"/ let hkcu = RegKey::predef(HKEY_CURRENT_USER);","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":23394,"byte_end":23443,"line_start":751,"line_end":751,"column_start":5,"column_end":54}},{"value":"/ let settings = hkcu.open_subkey(\"Software\\\\MyProduct\\\\Settings\")?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":23448,"byte_end":23518,"line_start":752,"line_end":752,"column_start":5,"column_end":75}},{"value":"/ let server: String = settings.get_value(\"server\")?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":23523,"byte_end":23578,"line_start":753,"line_end":753,"column_start":5,"column_end":60}},{"value":"/ let port: u32 = settings.get_value(\"port\")?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":23583,"byte_end":23631,"line_start":754,"line_end":754,"column_start":5,"column_end":53}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":23636,"byte_end":23648,"line_start":755,"line_end":755,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":23653,"byte_end":23660,"line_start":756,"line_end":756,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":23665,"byte_end":23672,"line_start":757,"line_end":757,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":24505,"byte_end":24518,"line_start":782,"line_end":782,"column_start":12,"column_end":25},"name":"get_raw_value","qualname":"<RegKey>::get_raw_value","value":"pub fn get_raw_value<N: AsRef<OsStr>>(&Self, N) -> io::Result<RegValue>","parent":null,"children":[],"decl_id":null,"docs":" Get raw bytes from registry value.\n Will get the `Default` value if `name` is an empty string.","sig":null,"attributes":[{"value":"/ Get raw bytes from registry value.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":23921,"byte_end":23959,"line_start":765,"line_end":765,"column_start":5,"column_end":43}},{"value":"/ Will get the `Default` value if `name` is an empty string.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":23964,"byte_end":24026,"line_start":766,"line_end":766,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":24031,"byte_end":24034,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":24039,"byte_end":24053,"line_start":768,"line_end":768,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":24058,"byte_end":24061,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":24066,"byte_end":24079,"line_start":770,"line_end":770,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":24084,"byte_end":24112,"line_start":771,"line_end":771,"column_start":5,"column_end":33}},{"value":"/ # use winreg::RegKey;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":24117,"byte_end":24142,"line_start":772,"line_end":772,"column_start":5,"column_end":30}},{"value":"/ # use winreg::enums::*;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":24147,"byte_end":24174,"line_start":773,"line_end":773,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":24179,"byte_end":24226,"line_start":774,"line_end":774,"column_start":5,"column_end":52}},{"value":"/ let hkcu = RegKey::predef(HKEY_CURRENT_USER);","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":24231,"byte_end":24280,"line_start":775,"line_end":775,"column_start":5,"column_end":54}},{"value":"/ let settings = hkcu.open_subkey(\"Software\\\\MyProduct\\\\Settings\")?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":24285,"byte_end":24355,"line_start":776,"line_end":776,"column_start":5,"column_end":75}},{"value":"/ let data = settings.get_raw_value(\"data\")?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":24360,"byte_end":24407,"line_start":777,"line_end":777,"column_start":5,"column_end":52}},{"value":"/ println!(\"Bytes: {:?}\", data.bytes);","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":24412,"byte_end":24452,"line_start":778,"line_end":778,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":24457,"byte_end":24469,"line_start":779,"line_end":779,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":24474,"byte_end":24481,"line_start":780,"line_end":780,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":24486,"byte_end":24493,"line_start":781,"line_end":781,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":26624,"byte_end":26633,"line_start":838,"line_end":838,"column_start":12,"column_end":21},"name":"set_value","qualname":"<RegKey>::set_value","value":"pub fn set_value<T: ToRegValue, N: AsRef<OsStr>>(&Self, N, &T)\n-> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Seamlessly convert a value from a rust type and write it to the registry value\n with `ToRegValue` trait implemented (currently `String`, `&str`, `u32` and `u64`).\n Will set the `Default` value if `name` is an empty string.","sig":null,"attributes":[{"value":"/ Seamlessly convert a value from a rust type and write it to the registry value","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":25886,"byte_end":25968,"line_start":820,"line_end":820,"column_start":5,"column_end":87}},{"value":"/ with `ToRegValue` trait implemented (currently `String`, `&str`, `u32` and `u64`).","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":25973,"byte_end":26059,"line_start":821,"line_end":821,"column_start":5,"column_end":91}},{"value":"/ Will set the `Default` value if `name` is an empty string.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":26064,"byte_end":26126,"line_start":822,"line_end":822,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":26131,"byte_end":26134,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":26139,"byte_end":26153,"line_start":824,"line_end":824,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":26158,"byte_end":26161,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":26166,"byte_end":26179,"line_start":826,"line_end":826,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":26184,"byte_end":26212,"line_start":827,"line_end":827,"column_start":5,"column_end":33}},{"value":"/ # use winreg::RegKey;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":26217,"byte_end":26242,"line_start":828,"line_end":828,"column_start":5,"column_end":30}},{"value":"/ # use winreg::enums::*;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":26247,"byte_end":26274,"line_start":829,"line_end":829,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":26279,"byte_end":26326,"line_start":830,"line_end":830,"column_start":5,"column_end":52}},{"value":"/ let hkcu = RegKey::predef(HKEY_CURRENT_USER);","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":26331,"byte_end":26380,"line_start":831,"line_end":831,"column_start":5,"column_end":54}},{"value":"/ let (settings, disp) = hkcu.create_subkey(\"Software\\\\MyProduct\\\\Settings\")?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":26385,"byte_end":26465,"line_start":832,"line_end":832,"column_start":5,"column_end":85}},{"value":"/ settings.set_value(\"server\", &\"www.example.com\")?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":26470,"byte_end":26524,"line_start":833,"line_end":833,"column_start":5,"column_end":59}},{"value":"/ settings.set_value(\"port\", &8080u32)?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":26529,"byte_end":26571,"line_start":834,"line_end":834,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":26576,"byte_end":26588,"line_start":835,"line_end":835,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":26593,"byte_end":26600,"line_start":836,"line_end":836,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":26605,"byte_end":26612,"line_start":837,"line_end":837,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":27526,"byte_end":27539,"line_start":861,"line_end":861,"column_start":12,"column_end":25},"name":"set_raw_value","qualname":"<RegKey>::set_raw_value","value":"pub fn set_raw_value<N: AsRef<OsStr>>(&Self, N, &RegValue) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write raw bytes from `RegValue` struct to a registry value.\n Will set the `Default` value if `name` is an empty string.","sig":null,"attributes":[{"value":"/ Write raw bytes from `RegValue` struct to a registry value.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":26780,"byte_end":26843,"line_start":842,"line_end":842,"column_start":5,"column_end":68}},{"value":"/ Will set the `Default` value if `name` is an empty string.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":26848,"byte_end":26910,"line_start":843,"line_end":843,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":26915,"byte_end":26918,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":26923,"byte_end":26937,"line_start":845,"line_end":845,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":26942,"byte_end":26945,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":26950,"byte_end":26963,"line_start":847,"line_end":847,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":26968,"byte_end":26996,"line_start":848,"line_end":848,"column_start":5,"column_end":33}},{"value":"/ use winreg::{RegKey, RegValue};","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":27001,"byte_end":27036,"line_start":849,"line_end":849,"column_start":5,"column_end":40}},{"value":"/ use winreg::enums::*;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":27041,"byte_end":27066,"line_start":850,"line_end":850,"column_start":5,"column_end":30}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":27071,"byte_end":27118,"line_start":851,"line_end":851,"column_start":5,"column_end":52}},{"value":"/ let hkcu = RegKey::predef(HKEY_CURRENT_USER);","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":27123,"byte_end":27172,"line_start":852,"line_end":852,"column_start":5,"column_end":54}},{"value":"/ let settings = hkcu.open_subkey(\"Software\\\\MyProduct\\\\Settings\")?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":27177,"byte_end":27247,"line_start":853,"line_end":853,"column_start":5,"column_end":75}},{"value":"/ let bytes: Vec<u8> = vec![1, 2, 3, 5, 8, 13, 21, 34, 55, 89];","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":27252,"byte_end":27317,"line_start":854,"line_end":854,"column_start":5,"column_end":70}},{"value":"/ let data = RegValue{ vtype: REG_BINARY, bytes: bytes};","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":27322,"byte_end":27380,"line_start":855,"line_end":855,"column_start":5,"column_end":63}},{"value":"/ settings.set_raw_value(\"data\", &data)?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":27385,"byte_end":27428,"line_start":856,"line_end":856,"column_start":5,"column_end":48}},{"value":"/ println!(\"Bytes: {:?}\", data.bytes);","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":27433,"byte_end":27473,"line_start":857,"line_end":857,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":27478,"byte_end":27490,"line_start":858,"line_end":858,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":27495,"byte_end":27502,"line_start":859,"line_end":859,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":27507,"byte_end":27514,"line_start":860,"line_end":860,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":28595,"byte_end":28607,"line_start":895,"line_end":895,"column_start":12,"column_end":24},"name":"delete_value","qualname":"<RegKey>::delete_value","value":"pub fn delete_value<N: AsRef<OsStr>>(&Self, N) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Delete specified value from registry.\n Will delete the `Default` value if `name` is an empty string.","sig":null,"attributes":[{"value":"/ Delete specified value from registry.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":28062,"byte_end":28103,"line_start":879,"line_end":879,"column_start":5,"column_end":46}},{"value":"/ Will delete the `Default` value if `name` is an empty string.","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":28108,"byte_end":28173,"line_start":880,"line_end":880,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":28178,"byte_end":28181,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":28186,"byte_end":28200,"line_start":882,"line_end":882,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":28205,"byte_end":28208,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":28213,"byte_end":28226,"line_start":884,"line_end":884,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":28231,"byte_end":28259,"line_start":885,"line_end":885,"column_start":5,"column_end":33}},{"value":"/ # use winreg::RegKey;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":28264,"byte_end":28289,"line_start":886,"line_end":886,"column_start":5,"column_end":30}},{"value":"/ # use winreg::enums::*;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":28294,"byte_end":28321,"line_start":887,"line_end":887,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":28326,"byte_end":28373,"line_start":888,"line_end":888,"column_start":5,"column_end":52}},{"value":"/ let hkcu = RegKey::predef(HKEY_CURRENT_USER);","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":28378,"byte_end":28427,"line_start":889,"line_end":889,"column_start":5,"column_end":54}},{"value":"/ let settings = hkcu.open_subkey(\"Software\\\\MyProduct\\\\Settings\")?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":28432,"byte_end":28502,"line_start":890,"line_end":890,"column_start":5,"column_end":75}},{"value":"/ settings.delete_value(\"data\")?;","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":28507,"byte_end":28542,"line_start":891,"line_end":891,"column_start":5,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":28547,"byte_end":28559,"line_start":892,"line_end":892,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":28564,"byte_end":28571,"line_start":893,"line_end":893,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":28576,"byte_end":28583,"line_start":894,"line_end":894,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":34682,"byte_end":34690,"line_start":1085,"line_end":1085,"column_start":12,"column_end":20},"name":"EnumKeys","qualname":"::EnumKeys","value":"EnumKeys {  }","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265}],"decl_id":null,"docs":" Iterator over subkeys names\n","sig":null,"attributes":[{"value":"/ Iterator over subkeys names","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":34639,"byte_end":34670,"line_start":1084,"line_end":1084,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":35215,"byte_end":35225,"line_start":1110,"line_end":1110,"column_start":12,"column_end":22},"name":"EnumValues","qualname":"::EnumValues","value":"EnumValues {  }","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274}],"decl_id":null,"docs":" Iterator over values\n","sig":null,"attributes":[{"value":"/ Iterator over values","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":35179,"byte_end":35203,"line_start":1109,"line_end":1109,"column_start":1,"column_end":25}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\types.rs","byte_start":38636,"byte_end":38642,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\types.rs","byte_start":39405,"byte_end":39408,"line_start":51,"line_end":51,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\types.rs","byte_start":40067,"byte_end":40075,"line_start":70,"line_end":70,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\types.rs","byte_start":40746,"byte_end":40749,"line_start":89,"line_end":89,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":5161,"byte_end":5175,"line_start":170,"line_end":170,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":6312,"byte_end":6320,"line_start":210,"line_end":210,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":6769,"byte_end":6777,"line_start":222,"line_end":222,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7017,"byte_end":7023,"line_start":234,"line_end":234,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7033,"byte_end":7039,"line_start":236,"line_end":236,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":241},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":34559,"byte_end":34565,"line_start":1078,"line_end":1078,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":34767,"byte_end":34775,"line_start":1090,"line_end":1090,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":35302,"byte_end":35312,"line_start":1115,"line_end":1115,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":4666,"byte_end":4671,"line_start":150,"line_end":150,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":72}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":4735,"byte_end":4740,"line_start":153,"line_end":153,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":153}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\types.rs","byte_start":38544,"byte_end":38549,"line_start":25,"line_end":25,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":184}},{"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\types.rs","byte_start":38636,"byte_end":38642,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"kind":{"Impl":{"id":0}},"from":{"krate":5,"index":7617},"to":{"krate":0,"index":184}},{"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\types.rs","byte_start":39405,"byte_end":39408,"line_start":51,"line_end":51,"column_start":23,"column_end":26},"kind":{"Impl":{"id":1}},"from":{"krate":5,"index":7080},"to":{"krate":0,"index":184}},{"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\types.rs","byte_start":40067,"byte_end":40075,"line_start":70,"line_end":70,"column_start":23,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":1,"index":2747},"to":{"krate":0,"index":184}},{"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\types.rs","byte_start":40746,"byte_end":40749,"line_start":89,"line_end":89,"column_start":23,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":7080},"to":{"krate":0,"index":184}},{"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":5161,"byte_end":5175,"line_start":170,"line_end":170,"column_start":6,"column_end":20},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":6312,"byte_end":6320,"line_start":210,"line_end":210,"column_start":23,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":9567}},{"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":6769,"byte_end":6777,"line_start":222,"line_end":222,"column_start":21,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":9560}},{"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7017,"byte_end":7023,"line_start":234,"line_end":234,"column_start":22,"column_end":28},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":380},"to":{"krate":2,"index":3019}},{"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":7033,"byte_end":7039,"line_start":236,"line_end":236,"column_start":6,"column_end":12},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":34559,"byte_end":34565,"line_start":1078,"line_end":1078,"column_start":15,"column_end":21},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":380},"to":{"krate":2,"index":3258}},{"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":34767,"byte_end":34775,"line_start":1090,"line_end":1090,"column_start":25,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":7829}},{"span":{"file_name":"C:\\Users\\Barat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winreg-0.10.1\\src\\lib.rs","byte_start":35302,"byte_end":35312,"line_start":1115,"line_end":1115,"column_start":25,"column_end":35},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":271},"to":{"krate":2,"index":7829}}]}